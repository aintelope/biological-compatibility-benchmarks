# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
# Repository: https://github.com/aintelope/biological-compatibility-benchmarks

hparams:
  gridsearch_trial_no: ${range:0,100}        # used just to repeat same experiment multiple times
  batch_size: 16
  lr: 0.015
  amsgrad: True
  use_separate_models_for_each_experiment: True
  model_params:
    hidden_sizes: [[8,16,8]]        # NB! use nested list here since we do not want to interpret the inner list as grid search combinations source
    num_conv_layers:  2
    conv_size:  2
    gamma: 0.7
    tau: 0.05
    eps_start: 1.0
    eps_end: 1.0
    replay_size: 99
    eps_last_pipeline_cycle: 1      # could be -1 but current cache has 1 so let it be
    eps_last_episode: ${hparams.num_episodes}       # use -1 when episode counting for eps is disabled
    eps_last_env_layout_seed: -1  # 10       # use -1 when trials counting for eps is disabled
    eps_last_frame: ${hparams.env_params.num_iters}       # use -1 when iteration counting for eps is disabled
  env_layout_seed_repeat_sequence_length: 1000000000
  env_layout_seed_modulo: 0   # How many different layout seeds there should be overall? After given amount of seeds has been used, the seed will loop over to zero and repeat the seed sequence. Zero or negative modulo parameter value disables the modulo feature.
  num_pipeline_cycles: 0
  num_episodes: 0  # how long to train. # TODO: move num_episodes to model_params
  test_episodes: 1  # will be added to train episodes
  env_params:
    num_iters: null # [300, 400]
    map_max: 7 # [7, 9]     
    map_width: ${hparams.env_params.map_max}   # NB! here it is exclusive max, used for Gridworld environments. Also, this width includes the walls at the border of the game, so 2 units of walls. Therefore, interior is map_width - 2.
    map_height: ${hparams.env_params.map_max}   # NB! here it is exclusive max, used for Gridworld environments. Also, this width includes the walls at the border of the game, so 2 units of walls. Therefore, interior is map_height - 2.
    #
    # to make whole map visible while still agent-centric, set the value to 
    # "max(map_width, map_height) - 3" in case of using Gridworld environments. This is because the map width and height includes walls. The agent always sees its own tile, so the actual radius will be one bigger. Therefore in total 3 units can be substracted.
    render_agent_radius: ${minus_3:${hparams.env_params.map_max}}  
